type Factory @entity {
  # factory address
  id: ID!
  # amount of exchanges created
  exchangeCount: BigInt!
  # amount of transactions all time
  txCount: BigInt!
  # current owner of the factory
  owner: ID!
}

type Currency @entity {
  # currency address
  id: ID!
  # currency symbol
  symbol: String
  # currency name
  name: String
  # currency decimals
  decimals: BigInt!
  # number of Exchanges containing this currency
  exchangeCount: BigInt!
}

type Collection @entity {
  # Collection address
  id: ID!
  # token name
  name: String
  # token decimals
  decimals: BigInt
  # tokens
  tokenIds: [Token!]!
  # total number of tokens in the collection across all exchanges
  nTokenIds: BigInt!
  # total number of listed tokens in the collection without duplicates across exchanges
  nListedTokenIds: BigInt!
  # number of Exchanges containing this Collection
  nExchanges: BigInt!
}

# Specific to an exchange
type Token @entity{
  # tokenId + "-" + tokenAddress + "-" + ExchangeAddress
  id: ID!
  # Spot Price
  spotPrice: BigDecimal!
  # Token Amount
  tokenAmount: BigInt!
  # Currency Reserve
  currencyReserve: BigInt!
  # Total Currency Reserve (CurrencyReserve * 2)
  totalValueLocked: BigInt!
  # Volume
  volume: BigInt!
  # number of swaps
  nSwaps: BigInt!
  # number of tokens sold
  nTokensSold: BigInt!
  # number of tokens bought
  nTokensBought: BigInt!
}

# Unique tokens regardless of exchange
type CollectionToken @entity{
  # tokenId + "-" + tokenAddress
  id: ID!
  # tokens residing in other exchanges
  tokenIds: [String!]!
}

type NiftyswapExchange @entity {
  # exchange address
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # block pool was created at
  createdAtBlockNumber: BigInt!
  # token
  collection: Collection!
  # currency
  currency: Currency!
  # all time number of transactions
  txCount: BigInt!
  # lp Fee
  lpFee: BigInt!
  # Total Value Locked
  totalValueLocked: BigInt!
  # Number of Tokens in the Pool
  volume: BigInt!
  # Total Currency Reserve
  totalCurrencyReserve: BigInt!
  # number of swaps
  nSwaps: BigInt!
}

type Block @entity {
  id: ID!
  number: BigInt!
  timestamp: BigInt!
  # parentHash: String
  # author: String
  # difficulty: BigInt
  # totalDifficulty: BigInt
  # gasUsed: BigInt
  # gasLimit: BigInt
  # receiptsRoot: String
  # transactionsRoot: String
  # stateRoot: String
  # size: BigInt
  # unclesHash: String
}